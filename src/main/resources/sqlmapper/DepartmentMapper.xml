<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jgenerator.model.DepartmentMapper">
    <cache />
    
    <insert id="insert" parameterType="org.jgenerator.model.Department" useGeneratedKeys="true" keyProperty="id">
        insert into Department
        (id, name, departmentNo, code, url, parentDepartment, sort, attribute1, attribute2, attribute3)
        values
        (#{id}, #{name}, #{departmentNo}, #{code}, #{url}, #{parentDepartment}, #{sort}, #{attribute1}, #{attribute2}, #{attribute3})
    </insert>
    
    <select id="queryByCondition" parameterType="map" resultType="org.jgenerator.model.Department">
        select * from Department
        <where>
            <include refid="condition"/>
            <include refid="andLikeCondition"/>
            <include refid="startLikeCondition"/>
        </where>
        <if test="orderBy==null and sortBy==null">
            order by id desc
        </if>
        <if test="orderBy!=null">
            order by ${orderBy}
        </if>
        <if test="orderBy!=null and sortBy!=null">
            ${sortBy}
        </if>
        <if test="beginRow==null or pageSize==null">
            limit 0,10
        </if>
        <if test="beginRow!=null and pageSize!=null">
            limit #{beginRow},#{pageSize}
        </if>
    </select>
    
    <select id="findAll" parameterType="map" resultType="org.jgenerator.model.Department">
        select * from Department
        <where>
            <include refid="condition"/>
            <include refid="andLikeCondition"/>
        </where>
    </select>
    
    <select id="distinct" parameterType="map" resultType="org.jgenerator.model.Department">
        select Distinct * from Department
        <where>
            <include refid="condition"/>
            <include refid="andLikeCondition"/>
            <include refid="startLikeCondition"/>
        </where>
        <if test="orderBy==null and sortBy==null">
            order by id desc
        </if>
        <if test="orderBy!=null">
            order by ${orderBy}
        </if>
        <if test="orderBy!=null and sortBy!=null">
            ${sortBy}
        </if>
        <if test="beginRow==null or pageSize==null">
            limit 0,10
        </if>
        <if test="beginRow!=null and pageSize!=null">
            limit #{beginRow},#{pageSize}
        </if>
    </select>
    
    <select id="find" parameterType="map" resultType="org.jgenerator.model.Department">
        select * from Department
        <where>
            <include refid="condition"/>
            <include refid="andLikeCondition"/>
            <include refid="startLikeCondition"/>
        </where>
    </select>
    
    <select id="count" parameterType="map" resultType="int">
        select count(0) from Department
        <where>
            <include refid="condition"/>
            <include refid="andLikeCondition"/>
            <include refid="startLikeCondition"/>
        </where>
    </select>
    
    <select id="fetch" parameterType="int" resultType="org.jgenerator.model.Department">
        select * from Department where id=#{id}
    </select>
    
    <select id="fetchByCondition" parameterType="int" resultType="org.jgenerator.model.Department">
        select * from Department
        <where>
            <include refid="condition"/>
        </where>
    </select>
    
    <delete id="deleteById" parameterType="int">
        delete from Department where id=#{id}
    </delete>
    
    <delete id="deleteByCondition" parameterType="map">
        delete from Department
        <where>
            <include refid="condition"/>
        </where>
    </delete>
    
    <update id="update" parameterType="org.jgenerator.model.Department">
        update Department
        <set>
                    <if test="id !=null">
                        id = #{id},
                    </if>
                    <if test="name !=null">
                        name = #{name},
                    </if>
                    <if test="departmentNo !=null">
                        departmentNo = #{departmentNo},
                    </if>
                    <if test="code !=null">
                        code = #{code},
                    </if>
                    <if test="url !=null">
                        url = #{url},
                    </if>
                    <if test="parentDepartment !=null">
                        parentDepartment = #{parentDepartment},
                    </if>
                    <if test="sort !=null">
                        sort = #{sort},
                    </if>
                    <if test="attribute1 !=null">
                        attribute1 = #{attribute1},
                    </if>
                    <if test="attribute2 !=null">
                        attribute2 = #{attribute2},
                    </if>
                    <if test="attribute3 !=null">
                        attribute3 = #{attribute3}
                    </if>
        </set>
        where id = #{id}
    </update>
    
    <sql id="condition">
            <if test="id !=null">
                and id = #{id}
            </if>
            <if test="name !=null">
                and name = #{name}
            </if>
            <if test="departmentNo !=null">
                and departmentNo = #{departmentNo}
            </if>
            <if test="code !=null">
                and code = #{code}
            </if>
            <if test="url !=null">
                and url = #{url}
            </if>
            <if test="parentDepartment !=null">
                and parentDepartment = #{parentDepartment}
            </if>
            <if test="sort !=null">
                and sort = #{sort}
            </if>
            <if test="attribute1 !=null">
                and attribute1 = #{attribute1}
            </if>
            <if test="attribute2 !=null">
                and attribute2 = #{attribute2}
            </if>
            <if test="attribute3 !=null">
                and attribute3 = #{attribute3}
            </if>
    </sql>
    
    <sql id="andLikeCondition">
            <if test="andLikeId!=null and andLikeId!=''">
                and id like CONCAT(CONCAT('%',#{andLikeId}),'%')
            </if>
            <if test="andLikeName!=null and andLikeName!=''">
                and name like CONCAT(CONCAT('%',#{andLikeName}),'%')
            </if>
            <if test="andLikeDepartmentNo!=null and andLikeDepartmentNo!=''">
                and departmentNo like CONCAT(CONCAT('%',#{andLikeDepartmentNo}),'%')
            </if>
            <if test="andLikeCode!=null and andLikeCode!=''">
                and code like CONCAT(CONCAT('%',#{andLikeCode}),'%')
            </if>
            <if test="andLikeUrl!=null and andLikeUrl!=''">
                and url like CONCAT(CONCAT('%',#{andLikeUrl}),'%')
            </if>
            <if test="andLikeParentDepartment!=null and andLikeParentDepartment!=''">
                and parentDepartment like CONCAT(CONCAT('%',#{andLikeParentDepartment}),'%')
            </if>
            <if test="andLikeSort!=null and andLikeSort!=''">
                and sort like CONCAT(CONCAT('%',#{andLikeSort}),'%')
            </if>
            <if test="andLikeAttribute1!=null and andLikeAttribute1!=''">
                and attribute1 like CONCAT(CONCAT('%',#{andLikeAttribute1}),'%')
            </if>
            <if test="andLikeAttribute2!=null and andLikeAttribute2!=''">
                and attribute2 like CONCAT(CONCAT('%',#{andLikeAttribute2}),'%')
            </if>
            <if test="andLikeAttribute3!=null and andLikeAttribute3!=''">
                and attribute3 like CONCAT(CONCAT('%',#{andLikeAttribute3}),'%')
            </if>
    </sql>
    
    <sql id="startLikeCondition">
            <if test="startLikeId!=null and startLikeId!=''">
                and id like CONCAT(CONCAT(#{startLikeId}),'%')
            </if>
            <if test="startLikeName!=null and startLikeName!=''">
                and name like CONCAT(CONCAT(#{startLikeName}),'%')
            </if>
            <if test="startLikeDepartmentNo!=null and startLikeDepartmentNo!=''">
                and departmentNo like CONCAT(CONCAT(#{startLikeDepartmentNo}),'%')
            </if>
            <if test="startLikeCode!=null and startLikeCode!=''">
                and code like CONCAT(CONCAT(#{startLikeCode}),'%')
            </if>
            <if test="startLikeUrl!=null and startLikeUrl!=''">
                and url like CONCAT(CONCAT(#{startLikeUrl}),'%')
            </if>
            <if test="startLikeParentDepartment!=null and startLikeParentDepartment!=''">
                and parentDepartment like CONCAT(CONCAT(#{startLikeParentDepartment}),'%')
            </if>
            <if test="startLikeSort!=null and startLikeSort!=''">
                and sort like CONCAT(CONCAT(#{startLikeSort}),'%')
            </if>
            <if test="startLikeAttribute1!=null and startLikeAttribute1!=''">
                and attribute1 like CONCAT(CONCAT(#{startLikeAttribute1}),'%')
            </if>
            <if test="startLikeAttribute2!=null and startLikeAttribute2!=''">
                and attribute2 like CONCAT(CONCAT(#{startLikeAttribute2}),'%')
            </if>
            <if test="startLikeAttribute3!=null and startLikeAttribute3!=''">
                and attribute3 like CONCAT(CONCAT(#{startLikeAttribute3}),'%')
            </if>
    </sql>
    
    <update id="setNull" parameterType="map">
        update Department
        <set>${tableField} = null</set>
        <where>
            <if test="id!=null">id = #{id}</if>
            <include refid="condition"/>
        </where>
    </update>
    
    <select id="maxInt" parameterType="map" resultType="int">
        select max(${tableField}) from Department
        <where>
            <include refid="condition"/>
            <include refid="andLikeCondition"/>
        </where>
    </select>
</mapper>